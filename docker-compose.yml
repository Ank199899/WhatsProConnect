version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: whatsapp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: whatsapp_advanced
      POSTGRES_USER: whatsapp_user
      POSTGRES_PASSWORD: whatsapp_secure_password_2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - whatsapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U whatsapp_user -d whatsapp_advanced"]
      interval: 10s
      timeout: 5s
      retries: 5

  # WhatsApp Backend Server
  whatsapp-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: whatsapp-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=whatsapp_advanced
      - DB_USER=whatsapp_user
      - DB_PASSWORD=whatsapp_secure_password_2025
      - DB_SSL=false
    volumes:
      - ./sessions:/app/sessions
      - ./uploads:/app/uploads
    ports:
      - "3001:3001"
    networks:
      - whatsapp-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  whatsapp-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: whatsapp-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - WHATSAPP_BACKEND_URL=http://whatsapp-backend:3001
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - DATABASE_TYPE=postgresql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=whatsapp_advanced
      - DB_USER=whatsapp_user
      - DB_PASSWORD=whatsapp_secure_password_2025
    ports:
      - "3000:3000"
    networks:
      - whatsapp-network
    depends_on:
      whatsapp-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/whatsapp/sessions"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: whatsapp-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - whatsapp-network
    depends_on:
      - whatsapp-frontend
      - whatsapp-backend

volumes:
  postgres_data:
    driver: local

networks:
  whatsapp-network:
    driver: bridge
