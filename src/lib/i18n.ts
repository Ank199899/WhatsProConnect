import { notFound } from 'next/navigation'
import { getRequestConfig } from 'next-intl/server'

// Can be imported from a shared config
export const locales = ['en', 'hi', 'es', 'fr', 'de', 'pt', 'ar', 'zh', 'ja', 'ko'] as const
export type Locale = typeof locales[number]

export const defaultLocale: Locale = 'en'

export const localeNames: Record<Locale, string> = {
  en: 'English',
  hi: 'à¤¹à¤¿à¤‚à¤¦à¥€',
  es: 'EspaÃ±ol',
  fr: 'FranÃ§ais',
  de: 'Deutsch',
  pt: 'PortuguÃªs',
  ar: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©',
  zh: 'ä¸­æ–‡',
  ja: 'æ—¥æœ¬èªž',
  ko: 'í•œêµ­ì–´'
}

export const localeFlags: Record<Locale, string> = {
  en: 'ðŸ‡ºðŸ‡¸',
  hi: 'ðŸ‡®ðŸ‡³',
  es: 'ðŸ‡ªðŸ‡¸',
  fr: 'ðŸ‡«ðŸ‡·',
  de: 'ðŸ‡©ðŸ‡ª',
  pt: 'ðŸ‡µðŸ‡¹',
  ar: 'ðŸ‡¸ðŸ‡¦',
  zh: 'ðŸ‡¨ðŸ‡³',
  ja: 'ðŸ‡¯ðŸ‡µ',
  ko: 'ðŸ‡°ðŸ‡·'
}

export default getRequestConfig(async ({ locale }) => {
  // Validate that the incoming `locale` parameter is valid
  if (!locales.includes(locale as any)) notFound()

  return {
    messages: (await import(`../messages/${locale}.json`)).default
  }
})
